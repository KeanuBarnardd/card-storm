@inject StoreService storeService;

<div class="item__card-container" style="background-image: url(@imgUrl);">
  <div class="item__card-content">
    <div class="row">
      <p class="sub-title bold">@title</p>
      <h1>$@price.00</h1>
    </div>

    <p class="p-text">@description</p>
    <button @onclick="()=> Buy(id)" class="btn btn-green"><i class="fa-solid fa-cart-shopping"></i>Add to cart</button>
  </div>
</div>


@code {
  [Parameter]
  public Guid id { get; set; }
  [Parameter]
  public string title { get; set; } = "Item";
  [Parameter]
  public string description { get; set; } = "Example Text";
  [Parameter]
  public float price { get; set; } = 0;
  [Parameter]
  public string imgUrl { get; set; } = "";


  private void Buy(Guid itemId)
  {
    storeService.AddItemToCart(itemId);
  }

  @* public void CreateNewCartItem()
    {
    var random = new Random();
    storeService.shoppingCart.Add(new CartItem
    {
    CartId = id,
    CartKey = random.Next(0, 350),
    CartTitle = title,
    CartPrice = price,
    CartImg = imgUrl
    });
    } *@



  @* public void AddItem()
    {
    if (storeService.shoppingCart != null)
    {
    if (storeService.shoppingCart.Count == 0)
    {
    CreateNewCartItem();
    }
    else
    {
    foreach (var item in storeService.shoppingCart.ToList())
    {
    if (id == item.CartId)
    {
    // Add to the count of the CartItem (CartItem += 1)
    Console.WriteLine("These ID's match.");

    }
    else
    {
    // Create a new CartItem- add to List
    Console.WriteLine("ID's don't match I_ID " + id + " C_ID: " + item.CartId);
    CreateNewCartItem();
    }
    }
    }
    }
    } *@
}